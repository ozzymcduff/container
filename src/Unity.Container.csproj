<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<Nullable>enable</Nullable>
		<LangVersion>latest</LangVersion>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>

		<DelaySign>false</DelaySign>
		<SignAssembly>true</SignAssembly>
		<AssemblyOriginatorKeyFile>package.snk</AssemblyOriginatorKeyFile>

		<TargetFrameworks>net7.0;net6.0;netstandard2.0</TargetFrameworks>
		<!--<TargetFrameworks>net7.0;net6.0;netstandard2.0;netstandard1.0</TargetFrameworks>-->

	</PropertyGroup>

	<PropertyGroup>
		<PackageId>Unity.Container</PackageId>
		<Description>Unity Container Engine</Description>
		<Copyright>Copyright © .NET Foundation and Contributors. All Rights Reserved</Copyright>
		<PackageProjectUrl>https://github.com/unitycontainer/container</PackageProjectUrl>
		<RepositoryUrl>https://github.com/unitycontainer/container</RepositoryUrl>
		<License>https://github.com/unitycontainer/container/blob/master/LICENSE</License>
		<IconUrl>https://avatars1.githubusercontent.com/u/12849707</IconUrl>
		<PackageTags>Unity Container unitycontainer Microsoft.Practices.Unity IoC DI Dependency Injection</PackageTags>
		<RepositoryType>git</RepositoryType>
		<Authors>Unity Open Source Project</Authors>
		<Company>Unity Open Source Project</Company>
		<RootNamespace>Unity</RootNamespace>
	</PropertyGroup>
	
	<!-- System.ValueTask --> 

	<ItemGroup>
		<PackageReference Include="System.Memory" Version="4.5.5" />
		<PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
		<PackageReference Include="System.ComponentModel.Composition" Version="7.0.0" />
		<PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" />
	</ItemGroup>


  <!-- Framework Compatibility -->

	<ItemGroup>															     
		<Compile Condition="$(TargetFramework.StartsWith('netstandard'))     " Remove="Container\Exceptions\IllegalInjectionMethodException.Desktop.cs" />
		<Compile Condition="$(TargetFramework.StartsWith('netstandard'))     " Remove="Container\Exceptions\ResolutionFailedException.Desktop.cs" />
	</ItemGroup>



	<!-- Configuration Settings -->

	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<DebugType>Portable</DebugType>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<DebugType>Full</DebugType>
	</PropertyGroup>

	<!-- Sourcelink -->

	<PropertyGroup>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
	</PropertyGroup>

	<!-- Release Notes -->

	<Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec">
		<ReadLinesFromFile File="../RELEASE-NOTES.txt">
			<Output TaskParameter="Lines" ItemName="ReleaseNoteLines" />
		</ReadLinesFromFile>
		<PropertyGroup>
			<PackageReleaseNotes>@(ReleaseNoteLines, '%0a')</PackageReleaseNotes>
		</PropertyGroup>
	</Target>

</Project>
